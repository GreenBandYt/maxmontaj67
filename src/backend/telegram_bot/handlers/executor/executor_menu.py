from telegram import Update
from telegram.ext import ContextTypes
from .executor_keyboards import executor_keyboard
import logging
import pymysql
from bot_utils.bot_db_utils import db_connect

async def executor_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –°—Ç–∞—Ä—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è.
    """
    await update.message.reply_text(
        f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {update.effective_user.first_name}!\n"
        "–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å.\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:",
        reply_markup=executor_keyboard()  # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
    )

async def handle_executor_new_tasks(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ó–¥–µ—Å—å –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –Ω–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è.")

async def handle_executor_current_tasks(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —Ç–µ–∫—É—â–∏—Ö –∑–∞–¥–∞–Ω–∏–π.")

async def handle_executor_contact_admin(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –ø—Ä—è–º–æ –∑–¥–µ—Å—å.")


async def handle_executor_accept_order(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    order_id = int(query.data.split("_")[-1])
    telegram_id = query.from_user.id

    logging.info(f"[EXECUTOR] {telegram_id} –ø—ã—Ç–∞–µ—Ç—Å—è –≤–∑—è—Ç—å –∑–∞–∫–∞–∑ {order_id}")

    with db_connect() as conn:
        cursor = conn.cursor(pymysql.cursors.DictCursor)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
        cursor.execute("SELECT status FROM orders WHERE id = %s", (order_id,))
        order = cursor.fetchone()

        if not order:
            logging.error(f"[EXECUTOR] –ó–∞–∫–∞–∑ {order_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î!")
            await query.answer("‚ùå –û—à–∏–±–∫–∞: –∑–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω.", show_alert=True)
            await query.edit_message_text("‚ùå –û—à–∏–±–∫–∞: –∑–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω —É–∂–µ —É–¥–∞–ª—ë–Ω.")
            return

        if order["status"] == "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è":
            logging.warning(f"[EXECUTOR] –ó–∞–∫–∞–∑ {order_id} —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è!")
            await query.answer("‚ö†Ô∏è –≠—Ç–æ—Ç –∑–∞–∫–∞–∑ —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è!", show_alert=True)
            await query.edit_message_text("‚ö†Ô∏è –≠—Ç–æ—Ç –∑–∞–∫–∞–∑ —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è! –û–±–Ω–æ–≤–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤.")
            return

        # –ù–∞—Ö–æ–¥–∏–º user_id –ø–æ telegram_id
        cursor.execute("SELECT id FROM users WHERE telegram_id = %s", (telegram_id,))
        user = cursor.fetchone()

        if not user:
            logging.error(f"[EXECUTOR] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å telegram_id {telegram_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î!")
            await query.answer("‚ùå –û—à–∏–±–∫–∞: –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.", show_alert=True)
            return

        user_id = user["id"]
        logging.info(f"[EXECUTOR] –ù–∞–π–¥–µ–Ω user_id {user_id} –¥–ª—è telegram_id {telegram_id}")

        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–∫–∞–∑
        sql = "UPDATE orders SET installer_id = %s, status = '–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è' WHERE id = %s"
        logging.info(f"SQL QUERY: {sql} | DATA: ({user_id}, {order_id})")
        cursor.execute(sql, (user_id, order_id))
        conn.commit()
        logging.info("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ –ë–î")

        # –£–¥–∞–ª—è–µ–º –∑–∞–∫–∞–∑ –∏–∑ pending_orders
        cursor.execute("DELETE FROM pending_orders WHERE order_id = %s", (order_id,))
        conn.commit()
        logging.info(f"üóëÔ∏è –ó–∞–∫–∞–∑ {order_id} —É–¥–∞–ª—ë–Ω –∏–∑ pending_orders")

    await query.answer("‚úÖ –í—ã –≤–∑—è–ª–∏ –∑–∞–∫–∞–∑ –≤ —Ä–∞–±–æ—Ç—É!", show_alert=True)
    await query.edit_message_reply_markup(None)




async def handle_executor_decline_order(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "üîô –ù–µ –±–µ—Ä—É" (–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å).
    """
    query = update.callback_query
    order_id = query.data.split("_")[-1]  # –ü–æ–ª—É—á–∞–µ–º ID –∑–∞–∫–∞–∑–∞

    logging.info(f"[EXECUTOR] {query.from_user.id} –æ—Ç–∫–∞–∑–∞–ª—Å—è –æ—Ç –∑–∞–∫–∞–∑–∞ {order_id}")

    await query.answer("üö´ –í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç –∑–∞–∫–∞–∑–∞.", show_alert=True)
    await query.edit_message_reply_markup(None)  # –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏
