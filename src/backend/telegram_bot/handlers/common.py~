from telegram import Update
from telegram.ext import ContextTypes
from bot_utils.bot_db_utils import db_connect  # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
from .keyboards.common_keyboards import guest_keyboard


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start. –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ —Ä–æ–ª–∏.
    """
    user_id = update.effective_user.id  # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_name = update.effective_user.first_name  # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Ä–æ–ª—å
    role = context.user_data.get('role')

    if not role:
        # –ï—Å–ª–∏ —Ä–æ–ª–∏ –Ω–µ—Ç –≤ –∫–µ—à–µ, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–∑ –±–∞–∑—ã
        role = await get_user_role(user_id)
        context.user_data['role'] = role  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–æ–ª—å –≤ –∫–µ—à

    if role == "guest":
        # –ï—Å–ª–∏ —Ä–æ–ª—å "–≥–æ—Å—Ç—å", –Ω–∞—á–∏–Ω–∞–µ–º –∑–∞–ø—Ä–æ—Å –∏–º–µ–Ω–∏
        await update.message.reply_text(
            f"–ü—Ä–∏–≤–µ—Ç, {user_name}!\n"
            "–ú—ã –Ω–µ –Ω–∞—à–ª–∏ –≤–∞—Å –≤ —Å–∏—Å—Ç–µ–º–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏."
        )
        context.user_data['registration_step'] = "name_request"  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∞–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω, –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
        await update.message.reply_text(
            f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user_name}!\n"
            f"–í–∞—à–∞ —Ä–æ–ª—å: {role}.\n"
            "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?"
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def process_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏.
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ —ç—Ç–∞–ø–µ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏
    if context.user_data.get("registration_step") != "name_request":
        return

    name = update.message.text.strip()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ–Ω–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = db_connect()
    try:
        with conn.cursor() as cursor:
            query = "SELECT id FROM users WHERE name = %s;"
            cursor.execute(query, (name,))
            result = cursor.fetchone()

        if result:
            # –ò–º—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥—Ä—É–≥–æ–µ –∏–º—è
            await update.message.reply_text("–ò–º—è —É–∂–µ –∑–∞–Ω—è—Ç–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–æ–µ –∏–º—è.")
        else:
            # –ò–º—è —É–Ω–∏–∫–∞–ª—å–Ω–æ, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
            context.user_data["name"] = name
            context.user_data["registration_step"] = "email_request"
            await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏.")
    finally:
        conn.close()


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–º–µ–Ω–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
async def check_user_name_in_db(user_name: str) -> dict:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω, –∏–Ω–∞—á–µ None.
    """
    try:
        conn = db_connect()  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        with conn.cursor() as cursor:
            query = """
                SELECT u.id, u.role, r.name AS role_name
                FROM users u
                JOIN roles r ON u.role = r.id
                WHERE u.name = %s
            """
            cursor.execute(query, (user_name,))
            result = cursor.fetchone()
            return {
                "id": result['id'],
                "role": result['role_name']
            } if result else None
    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∏–º–µ–Ω–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return None
    finally:
        conn.close()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ telegram_id –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
async def bind_telegram_id_to_user(telegram_id: int, user_id: int):
    """
    –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç telegram_id –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
    """
    try:
        conn = db_connect()  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        with conn.cursor() as cursor:
            query = "UPDATE users SET telegram_id = %s WHERE id = %s"
            cursor.execute(query, (telegram_id, user_id))
        conn.commit()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–≤—è–∑–∫–µ telegram_id –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {e}")
    finally:
        conn.close()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ email
async def process_email(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–≤–æ–¥–∞ email.
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ —ç—Ç–∞–ø–µ –≤–≤–æ–¥–∞ email
    if context.user_data.get("registration_step") != "email_request":
        return

    email = update.message.text.strip()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ email –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = db_connect()
    try:
        with conn.cursor() as cursor:
            query = "SELECT id FROM users WHERE email = %s;"
            cursor.execute(query, (email,))
            result = cursor.fetchone()

        if result:
            # Email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
            context.user_data["registration_step"] = None
            context.user_data["role"] = "guest"  # –ù–∞–∑–Ω–∞—á–∞–µ–º —Ä–æ–ª—å –≥–æ—Å—Ç—è
            await update.message.reply_text(
                f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í–∞—à email –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?"
            )
        else:
            # Email –Ω–µ –Ω–∞–π–¥–µ–Ω
            await update.message.reply_text(
                "Email –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤–≤–æ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π email."
            )
    finally:
        conn.close()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ email
def find_user_by_email(email: str):
    """
    –ò—â–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ email –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
    """
    conn = db_connect()  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    try:
        with conn.cursor() as cursor:
            query = """
                SELECT u.id, u.name, r.name AS role
                FROM users u
                JOIN roles r ON u.role = r.id
                WHERE u.email = %s
            """
            cursor.execute(query, (email,))
            return cursor.fetchone()  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–≤—É—é –Ω–∞–π–¥–µ–Ω–Ω—É—é –∑–∞–ø–∏—Å—å
    finally:
        conn.close()


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è telegram_id –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
def update_user_telegram_id(user_id: int, telegram_id: int):
    """
    –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç telegram_id –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    """
    conn = db_connect()  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    try:
        with conn.cursor() as cursor:
            query = """
                UPDATE users
                SET telegram_id = %s
                WHERE id = %s
            """
            cursor.execute(query, (telegram_id, user_id))
            conn.commit()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    finally:
        conn.close()



# –§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def get_user_role(user_id: int) -> str:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ telegram_id.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å —Ä–æ–ª—å—é: "guest" –∏–ª–∏ —Ä–æ–ª—å –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
    """
    try:
        conn = db_connect()  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        with conn.cursor() as cursor:
            query = """
                SELECT r.name AS role
                FROM users u
                JOIN roles r ON u.role = r.id
                WHERE u.telegram_id = %s
            """
            cursor.execute(query, (user_id,))
            result = cursor.fetchone()
            return result['role'] if result else "guest"
    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        print(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return "guest"
    finally:
        conn.close()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ–º–æ—â—å"
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–º–æ—â—å".
    """
    await update.message.reply_text(
        "–Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å! –í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π:\n"
        "1. –ù–∞–∂–º–∏—Ç–µ '‚úçÔ∏è –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ —Å–∏—Å—Ç–µ–º–µ.\n"
        "2. –ù–∞–∂–º–∏—Ç–µ 'üÜò –ü–æ–º–æ—â—å', —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n\n"
        "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
    )
