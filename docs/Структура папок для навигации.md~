# План организации структуры папок и страниц для проекта MaxMontaj67

## Структура папок для шаблонов (templates)
templates/
    admin/
        admin_dashboard.html
        orders/
            admin_orders.html
        users/
            admin_users.html
    dispatcher/
        dispatcher_dashboard.html
        orders/
            dispatcher_orders.html
    specialist/
        specialist_dashboard.html
        orders/
            specialist_orders.html
    executor/
        executor_dashboard.html
        orders/
            executor_orders.html
    customer/
        customer_dashboard.html
        orders/
            customer_orders.html


- Каждая роль имеет свою папку.
- Внутри папок ролей создаются подпапки для групп страниц (например, orders, users).
- Названия страниц содержат название роли и описывают функционал, например:
  - `admin_orders.html` (страница для управления заказами администратором).
  - `dispatcher_orders.html` (страница для заказов диспетчера).

## Принципы именования страниц
1. Начинаем с роли (admin, dispatcher, specialist, executor, customer).
2. Добавляем контекст (например, orders, users).
3. Если уровень вложенности выше одного, добавляем уточнение:
   - `admin_orders.html` (1 уровень).
   - `admin_orders_details.html` (2 уровень).

## Маршрутизация
1. Для каждой роли создаются отдельные файлы маршрутизации:
   - `admin_api.py` для администратора.
   - `dispatcher_api.py` для диспетчера.
   - `specialist_api.py` для специалистов.
   - `executor_api.py` для исполнителей.

2. Основные задачи отдельных файлов маршрутизации:
   - Улучшение читаемости и структурированности кода.
   - Возможность масштабирования приложения.
   - Логическое разделение функционала.

3. Файл `app.py` будет служить точкой входа и подключать маршруты из файлов ролей.

## Примеры названий страниц для 1-го уровня
- **Администратор:**
  - `admin_orders.html`
  - `admin_users.html`
- **Диспетчер:**
  - `dispatcher_orders.html`
- **Специалист:**
  - `specialist_orders.html`
- **Исполнитель:**
  - `executor_orders.html`

## Планы на будущее
- По мере добавления нового функционала и страниц дополнять структуру.
- Проводить ревизию файлов для обеспечения логической иерархии.
- Уточнять маршруты для каждой роли.

---

Этот план можно использовать как руководство при разработке структуры проекта.
