from flask import Flask, request, jsonify, session
from utils import db_connect, verify_password, hash_password  # Добавлен hash_password

app = Flask(__name__)
app.secret_key = 'supersecretkey5054'

# Маршрут для авторизации
@app.route('/api/login', methods=['POST'])
def login_api():
    data = request.form
    email = data.get('email')
    password = data.get('password')

    if not email or not password:
        return jsonify({'error': 'Email и пароль обязательны'}), 400

    try:
        with db_connect() as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT id, password_hash, role, name FROM users WHERE email = %s", (email,))
            user = cursor.fetchone()

        if user and verify_password(password, user[1]):
            session['user_id'] = user[0]
            session['role'] = user[2]
            session['name'] = user[3]
            return jsonify({'message': 'Успешный вход', 'role': user[2], 'name': user[3]}), 200
        else:
            return jsonify({'error': 'Неверный логин или пароль'}), 401
    except Exception as e:
        return jsonify({'error': str(e)}), 500

# Маршрут для регистрации
@app.route('/api/register', methods=['POST'])
def register_api():
    data = request.form
    name = data.get('name')
    email = data.get('email')
    password = data.get('password')
    role = data.get('role', 'customer')  # Роль по умолчанию

    if not all([name, email, password]):
        return jsonify({'error': 'Все поля обязательны'}), 400

    hashed_password = hash_password(password)

    try:
        with db_connect() as conn:
            cursor = conn.cursor()
            query = "INSERT INTO users (name, email, password_hash, role) VALUES (%s, %s, %s, %s)"
            cursor.execute(query, (name, email, hashed_password, role))
            conn.commit()

        # Логика авто-входа после регистрации
        session['user_id'] = cursor.lastrowid
        session['role'] = role
        session['name'] = name
        return jsonify({'message': 'Пользователь успешно зарегистрирован', 'name': name, 'role': role}), 201
    except Exception as e:
        return jsonify({'error': str(e)}), 500

if __name__ == '__main__':
    app.run(debug=True, host='0.0.0.0', port=5001)
